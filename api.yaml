openapi: 3.0.3
info:
  title: DNetTickets - API
  version: 3.0.0
paths:
  /api/getTrains:
    get:
      summary: Get all trains
      responses:
        "200":
          description: A list of trains
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Train"
              example:
                - trainCompany: reliable-trains.com
                  trainId: de9bdc62-d08c-4ac2-8838-cfba02e556f0
                  name: Thalys Amsterdam
                  location: Brussels - Amsterdam
                  image: https://reliable-trains.com/amsterdam.jpg
  /api/getTrain:
    get:
      summary: Get train by ID
      parameters:
        - name: trainCompany
          in: query
          description: ID of the train company
          required: true
          schema:
            type: string
        - name: trainId
          in: query
          description: ID of the train
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A single train
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Train"
              example:
                trainCompany: reliable-trains.com
                trainId: de9bdc62-d08c-4ac2-8838-cfba02e556f0
                name: Thalys Amsterdam
                location: Brussels - Amsterdam
                image: https://reliable-trains.com/amsterdam.jpg
        "404":
          description: Train not found
  /api/getTrainTimes:
    get:
      summary: Get all times for a train
      parameters:
        - name: trainCompany
          in: query
          description: ID of the train company
          required: true
          schema:
            type: string
        - name: trainId
          in: query
          description: ID of the train
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of train times, ordered by the time, i.e., the smallest time should be first.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - 2022-09-26T19:30
        "404":
          description: Train not found
  /api/getAvailableSeats:
    get:
      summary: Get all available seats for a train at a specific time
      parameters:
        - name: trainCompany
          in: query
          description: ID of the train company
          required: true
          schema:
            type: string
        - name: trainId
          in: query
          description: ID of the train
          required: true
          schema:
            type: string
        - name: time
          in: query
          description: time of the train
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An object with lists of seats grouped by their type, ordered by their appearance in the train, i.e., first the first row, going from column A to x.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: "#/components/schemas/Seat"
              example:
                1st class:
                  - trainCompany: reliable-trains.com
                    trainId: de9bdc62-d08c-4ac2-8838-cfba02e556f0
                    seatId: 62a61c7b-71c2-4725-8937-0061fc6d86d2
                    time: 2022-09-26T19:30
                    type: 1st class
                    name: 5B
                    price: 99
                    ticket: null
                2nd class:
                  - trainCompany: reliable-trains.com
                    trainId: de9bdc62-d08c-4ac2-8838-cfba02e556f0
                    seatId: 3d9d71b6-04c8-4677-b6b5-1357f9f8e61d
                    time: 2022-09-26T19:30
                    type: 2nd class
                    name: 1B
                    price: 79
                    ticket: null
  /api/getSeat:
    get:
      summary: Get seat by ID
      parameters:
        - name: trainCompany
          in: query
          description: ID of the train company
          required: true
          schema:
            type: string
        - name: trainId
          in: query
          description: ID of the train
          required: true
          schema:
            type: string
        - name: seatId
          in: query
          description: ID of the seat
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A single seat
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Seat"
              example:
                trainCompany: reliable-trains.com
                trainId: de9bdc62-d08c-4ac2-8838-cfba02e556f0
                seatId: 62a61c7b-71c2-4725-8937-0061fc6d86d2
                time: 2022-09-26T19:30
                type: 1st class
                name: 5B
                price: 123.56
                ticket: null
        "404":
          description: Seat not found
  /api/confirmQuotes:
    post:
      summary: Create a new booking
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Quote"
      responses:
        "204":
          description: Successfully submitted
  /api/getBookings:
    get:
      summary: Get bookings from customer
      responses:
        "200":
          description: A list of bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Booking"
              example:
                - id: 2d392a2e-8bd7-488b-9dda-b12c25c15446
                  time: 2022-09-26T19:30
                  tickets:
                    - trainCompany: reliable-trains.com
                      trainId: de9bdc62-d08c-4ac2-8838-cfba02e556f0
                      seatId: 62a61c7b-71c2-4725-8937-0061fc6d86d2
                      ticketId: 10e9f85f-02d0-4f2a-98dc-004329240efd
                      customer: distributedsystems@cs.kuleuven.be
                  customer: distributedsystems@cs.kuleuven.be
  /api/getAllBookings:
    get:
      summary: Get all bookings
      description: Only managers can request all bookings, other customers can only retrieve their own bookings via getBookings.
      responses:
        "200":
          description: A list of bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Booking"
              example:
                - id: 2d392a2e-8bd7-488b-9dda-b12c25c15446
                  time: 2022-09-26T19:30
                  tickets:
                    - trainCompany: reliable-trains.com
                      trainId: de9bdc62-d08c-4ac2-8838-cfba02e556f0
                      seatId: 62a61c7b-71c2-4725-8937-0061fc6d86d2
                      ticketId: 10e9f85f-02d0-4f2a-98dc-004329240efd
                      customer: distributedsystems@cs.kuleuven.be
                  customer: distributedsystems@cs.kuleuven.be
      security:
        - openId:
            - email
            - manager
  /api/getBestCustomers:
    get:
      summary: Get the best customer
      description: Return the best customer (highest number of tickets, return all of them if multiple customers have an equal amount). Only managers can use this function.
      responses:
        "200":
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - distributedsystems@cs.kuleuven.be
      security:
        - openId:
            - email
            - manager

security:
  - openId:
      - email

components:
  schemas:
    Train:
      type: object
      properties:
        trainCompany:
          type: string
        trainId:
          type: string
        name:
          type: string
        location:
          type: string
        image:
          type: string
    Seat:
      type: object
      properties:
        trainCompany:
          type: string
        trainId:
          type: string
        seatId:
          type: string
        time:
          type: string
        name:
          type: string
        price:
          type: string
    Quote:
      type: object
      properties:
        trainCompany:
          type: string
        trainId:
          type: string
        seatId:
          type: string
    Ticket:
      type: object
      properties:
        id:
          type: string
        trainCompany:
          type: string
        trainId:
          type: string
        seatId:
          type: string
        customer:
          type: string
    Booking:
      type: object
      properties:
        id:
          type: string
        time:
          type: string
        customer:
          type: string
        tickets:
          type: array
          items:
            $ref: "#/components/schemas/Ticket"

  securitySchemes:
    openId:
      type: openIdConnect
